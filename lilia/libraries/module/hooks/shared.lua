
local GM = GM or GAMEMODE

function GM:ModuleDependenciesPreLoad(uniqueID, module, global)
    if tostring(uniqueID) == "schema" then return end
    if not global or global == "" then
        print("No global argument specified for module with uniqueID: " .. uniqueID)
        _G[uniqueID] = module
    elseif global ~= "" then
        _G[global] = _G[global] or {}
        _G[global] = module
    else
        print("Unable to Register Module: " .. module.name .. ". Disabling it!")
    end
end


function GM:VerifyModuleValidity(uniqueID, module, global)
    local validityChecker = (not global and global == "" and _G[uniqueID] ~= nil) or (global ~= "" and _G[global] ~= nil)
    local isEnabled = module.enabled
    for moduleName, conditions in pairs(lia.module.ModuleConditions) do
        if uniqueID ~= moduleName then continue end
        if _G[conditions.global] ~= nil then
            print(conditions.name .. " found. Activating Compatibility!")
            return true
        else
            return false
        end
    end
    return validityChecker and ((isEnabled and isEnabled) or true)
end


function GM:LiliaLoaded()
    local namecache = {}
    for _, MODULE in pairs(lia.module.list) do
        local authorID = (tonumber(MODULE.author) and tostring(MODULE.author)) or (string.match(MODULE.author, "STEAM_") and util.SteamIDTo64(MODULE.author)) or nil
        if authorID then
            if namecache[authorID] ~= nil then
                MODULE.author = namecache[authorID]
            else
                steamworks.RequestPlayerInfo(
                    authorID,
                    function(newName)
                        namecache[authorID] = newName
                        MODULE.author = newName or MODULE.author
                    end
                )
            end
        end
    end

    lia.module.namecache = namecache
end

