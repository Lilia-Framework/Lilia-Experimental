
local entityMeta = FindMetaTable("Entity")

local ChairCache = {}

function entityMeta:isProp()
    return self:GetClass() == "prop_physics"
end


function entityMeta:GetViewAngle(pos)
    local diff = pos - self:EyePos()
    diff:Normalize()

    return math.abs(math.deg(math.acos(self:EyeAngles():Forward():Dot(diff))))
end


function entityMeta:InFov(ent, fov)
    return self:GetViewAngle(ent:EyePos()) < (fov or 88)
end


function entityMeta:InTrace(ent)
    return util.TraceLine(
        {
            start = ent:EyePos(),
            endpos = self:EyePos()
        }
    ).Entity == self
end


function entityMeta:IsScreenVisible(ent, maxDist, fov)
    return self:EyePos():DistToSqr(ent:EyePos()) < (maxDist or 512 * 512) and self:IsLineOfSightClear(ent:EyePos()) and self:InFov(ent, fov)
end


function entityMeta:isChair()
    return ChairCache[self:GetModel()]
end


for k, v in pairs(list.Get("Vehicles")) do
    if v.Category == "Chairs" then
        ChairCache[v.Model] = true
    end
end
