
function GM:GetGameDescription()
    return lia.config.GamemodeName
end


function GM:OnChatReceived()
    if system.IsWindows() and not system.HasFocus() then system.FlashWindow() end
end


function GM:InitPostEntity()
    lia.db.waitForTablesToLoad():next(
        function()
            hook.Run("LoadData")
            hook.Run("PostLoadData")
        end
    )

    timer.Simple(2, function() lia.entityDataLoaded = true end)
end


function GM:PlayerSay(client, message)
    if utf8.len(message) <= lia.config.MaxChatLength then
        local chatType, message, anonymous = lia.chat.parse(client, message, true)
        if (chatType == "ic") and lia.command.parse(client, message) then return "" end
        lia.chat.send(client, chatType, message, anonymous)
        hook.Run("PostPlayerSay", client, message, chatType, anonymous)
    else
        client:notify("Your message is too long and has not been sent.")
    end
    return ""
end


function GM:KeyPress(client, key)
    if key == IN_ATTACK2 and IsValid(client.Grabbed) then
        client:DropObject(client.Grabbed)
        client.Grabbed = NULL
    end
end


function GM:KeyRelease(client, key)
    if key == IN_ATTACK2 then
        local wep = client:GetActiveWeapon()
        if IsValid(wep) and wep.IsHands and wep.ReadyToPickup then wep:Grab() end
    end
end


function GM:EntityNetworkedVarChanged(entity, varName, _, newVal)
    if varName == "Model" and entity.SetModel then hook.Run("PlayerModelChanged", entity, newVal) end
end

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function GM:PlayerInitialSpawn(client)
    if client:IsBot() then
        local botID = os.time()
        local index = math.random(1, table.Count(lia.faction.indices))
        local faction = lia.faction.indices[index]
        local inventory = lia.inventory.new("grid")
        local character = lia.char.new(
            {
                name = client:Name(),
                faction = faction and faction.uniqueID or "unknown",
                desc = "This is a bot. BotID is " .. botID .. ".",
                model = "models/gman.mdl",
            },
            botID,
            client,
            client:SteamID64()
        )

        character.isBot = true
        character.vars.inv = {}
        inventory.id = "bot" .. character:getID()
        character.vars.inv[1] = inventory
        lia.inventory.instances[inventory.id] = inventory
        lia.char.loaded[botID] = character
        character:setup()
        client:Spawn()
    end
end

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function GM:PlayerDisconnected(client)
    client:saveLiliaData()
    local character = client:getChar()
    if character then
        local charEnts = character:getVar("charEnts") or {}
        for _, v in ipairs(charEnts) do
            if v and IsValid(v) then v:Remove() end
        end

        hook.Run("OnCharDisconnect", client, character)
        character:save()
    end

    if IsValid(client.liaRagdoll) then
        client.liaRagdoll.liaNoReset = true
        client.liaRagdoll.liaIgnoreDelete = true
        client.liaRagdoll:Remove()
    end

    lia.char.cleanUpForPlayer(client)
    for _, entity in pairs(ents.GetAll()) do
        if entity:GetCreator() == client then entity:Remove() end
    end
end

--------------------------------------------------------------------------------------------------------------------------
function GM:GetPreferredCarryAngles(entity)
    if entity.preferedAngle then return entity.preferedAngle end
    local class = entity:GetClass()
    if class == "lia_item" then
        local itemTable = entity:getItemTable()
        if itemTable then
            local preferedAngle = itemTable.preferedAngle
            if preferedAngle then return preferedAngle end
        end
    elseif class == "prop_physics" then
        local model = entity:GetModel():lower()
        return defaultAngleData[model]
    end
end


function GM:Move(client, moveData)
    local char = client:getChar()
    if not char then return end
    if client:GetMoveType() == MOVETYPE_WALK and moveData:KeyDown(IN_WALK) then
        local mf, ms = 0, 0
        local speed = client:GetWalkSpeed()
        local ratio = lia.config.WalkRatio
        if moveData:KeyDown(IN_FORWARD) then
            mf = ratio
        elseif moveData:KeyDown(IN_BACK) then
            mf = -ratio
        end

        if moveData:KeyDown(IN_MOVELEFT) then
            ms = -ratio
        elseif moveData:KeyDown(IN_MOVERIGHT) then
            ms = ratio
        end

        moveData:SetForwardSpeed(mf * speed)
        moveData:SetSideSpeed(ms * speed)
    end
end


function GM:PlayerSpray(_)
    return true
end

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function GM:PlayerDeathSound()
    return true
end


function GM:CanPlayerSuicide(_)
    return false
end


function GM:AllowPlayerPickup(_, _)
    return false
end


function GM:PlayerShouldTakeDamage(client, _)
    return client:getChar() ~= nil
end

