
function MODULE:IsCharRecognized(char, id)
    local client = char:getPlayer()
    local recognized = char:getData("rgn", "")
    local other = lia.char.loaded[id]
    local otherclient = other:getPlayer()
    if char.id == id then return true end
    local faction = lia.faction.indices[other:getFaction()]
    if faction and faction.isGloballyRecognized then return true end
    if MODULE.FactionAutoRecognize and (char:getFaction() == other:getFaction() and (MODULE.MemberToMemberAutoRecognition[char:getFaction()] and MODULE.MemberToMemberAutoRecognition[other:getFaction()])) then return true end
    if client:isStaffOnDuty() or otherclient:isStaffOnDuty() then return true end
    if recognized ~= "" and recognized:find("," .. id .. ",") then return true end
    return false
end


function MODULE:IsCharFakeRecognized(char, id)
    local other = lia.char.loaded[id]
    local CharNameList = char:getRecognizedAs()
    local clientName = CharNameList[other:getID()]
    return MODULE.FakeNamesEnabled and self:IsFakeNameExistant(clientName, CharNameList)
end


function MODULE:IsFakeNameExistant(clientName, CharNameList)
    for _, n in pairs(CharNameList) do
        if n == clientName then return true end
    end
    return false
end


lia.char.registerVar(
    "RecognizedAs",
    {
        field = "recognized_as",
        default = {},
        noDisplay = true
    }
)
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
