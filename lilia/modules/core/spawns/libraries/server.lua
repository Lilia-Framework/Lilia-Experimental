
SpawnsCore.spawns = SpawnsCore.spawns or {}

function SpawnsCore:LoadData()
    self.spawns = self:getData() or {}
end


function SpawnsCore:SaveData()
    self:setData(self.spawns)
end


function SpawnsCore:PostPlayerLoadout(client)
    local character = client:getChar()
    if IsValid(client) or character and self.spawns and table.Count(self.spawns) > 0 then
        local class = character:getClass()
        local points
        local className = ""
        for k, v in ipairs(lia.faction.indices) do
            if k == client:Team() then
                points = self.spawns[v.uniqueID] or {}
                break
            end
        end

        if points then
            for _, v in ipairs(lia.class.list) do
                if class == v.index then
                    className = v.uniqueID
                    break
                end
            end

            points = points[className] or points[""]
            if points and table.Count(points) > 0 then
                local position = table.Random(points)
                client:SetPos(position)
            end
        end
    end
end


function SpawnsCore:CharacterPreSave(character)
    local client = character:getPlayer()
    if IsValid(client) then character:setData("pos", {client:GetPos(), client:EyeAngles(), game.GetMap()}) end
end


function SpawnsCore:PlayerLoadedChar(client, character, _)
    timer.Simple(
        0,
        function()
            if IsValid(client) then
                local position = character:getData("pos")
                if position then
                    if position[3] and position[3]:lower() == game.GetMap():lower() then
                        client:SetPos(position[1].x and position[1] or client:GetPos())
                        client:SetEyeAngles(position[2].p and position[2] or Angle(0, 0, 0))
                    end

                    character:setData("pos", nil)
                end
            end
        end
    )
end


function SpawnsCore:PlayerDeath(client, _, attacker)
    local char = client:getChar()
    if not char then return end
    if self.DeathPopupEnabled and not attacker:IsWorld() then
        net.Start("death_client")
        net.WriteString(attacker:Nick())
        net.WriteFloat(attacker:getChar():getID())
        net.Send(client)
    end

    if (attacker:IsPlayer() and self.LoseWeapononDeathHuman) or (not attacker:IsPlayer() and self.LoseWeapononDeathNPC) or (self.LoseWeapononDeathWorld and attacker:IsWorld()) then self:RemoveAllEquippedWeapons(client) end
    net.Start("RespawnButtonDeath")
    net.Send(client)
    char:setData("deathPos", client:GetPos())
end

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function SpawnsCore:RemoveAllEquippedWeapons(client)
    local char = client:getChar()
    local inventory = char:getInv()
    local items = inventory:getItems()
    client.carryWeapons = {}
    client.LostItems = {}
    for _, v in pairs(items) do
        if (v.isWeapon or v.isCW) and v:getData("equip") then
            table.insert(client.LostItems, v.uniqueID)
            v:remove()
        end
    end

    if #client.LostItems > 0 then
        local amount = #client.LostItems > 1 and #client.LostItems .. " items" or "an item"
        client:notify("Because you died, you have lost " .. amount .. ".")
    end
end

