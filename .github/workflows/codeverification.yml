name: Commit Verification

on:
  push:
  pull_request:

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  CodeVerifierAndIndenter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: lilia

      - name: Setup Lua
        uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: '5.2'

      - name: Setup LuaRocks
        uses: leafo/gh-actions-luarocks@v4.0.0

      - name: Pull gluacheck
        uses: actions/checkout@v2
        with:
          repository: impulsh/gluacheck
          path: luacheck

      - name: Build gluacheck
        working-directory: luacheck
        run: luarocks make

      - name: Lint with gluacheck
        working-directory: lilia
        run: >-
          luacheck . --no-redefined
          --no-global --no-self
          --no-max-line-length --no-max-code-line-length
          --no-max-string-line-length --no-max-comment-line-length
          --no-max-cyclomatic-complexity 
          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Bash
        run: |
          sudo apt update
          sudo apt install -y unzip

      - name: List files in the working directory (Before running GLuaFixer)
        run: |
          echo "Listing files in root directory before running GLuaFixer..."
          ls

      - name: Set location of Lilia
        run: |
          cd lilia

      - name: List files in lilia
        run: |
          echo "Listing files in 'lilia' directory..."
          ls
        working-directory: '${{ github.workspace }}/lilia'

      - name: Download GLuaFixer (Step 1)
        run: |
          echo "Step 1: Downloading GLuaFixer..."
          curl -L -o glualint.zip https://github.com/FPtje/GLuaFixer/releases/download/1.26.0/glualint-1.26.0-x86_64-linux.zip
          unzip glualint.zip -d glualint
          mv glualint/glualint glualint_executable
        working-directory: '${{ github.workspace }}'
        shell: bash

      - name: Set execution permissions (Step 2)
        run: |
          echo "Step 2: Setting execution permissions for GLuaFixer..."
          sudo chmod +x glualint_executable
        working-directory: '${{ github.workspace }}'
        shell: bash

      - name: List files in the working directory (After downloading GLuaFixer)
        run: |
          echo "Listing files in root directory after downloading GLuaFixer..."
          ls

      - name: Run GLuaFixer on Lilia - Part 1
        run: |
          echo "Step 7: Running GLuaFixer pretty-print on 'gamemode' in 'lilia'..."
          sudo ./glualint_executable pretty-print lilia/gamemode/*
        working-directory: ${{ github.workspace }}
        shell: bash

      - name: Run GLuaFixer on Lilia - Part 2
        run: |
          echo "Step 7: Running GLuaFixer pretty-print on 'libraries' in 'lilia'..."
          sudo ./glualint_executable pretty-print lilia/libraries/*
        working-directory: ${{ github.workspace }}
        shell: bash
  
      - name: Run GLuaFixer on Lilia - Part 3
        run: |
          echo "Step 7: Running GLuaFixer pretty-print on 'preloaded' in 'modules' of 'lilia'..."
          sudo ./glualint_executable pretty-print lilia/modules/preloaded/*
        working-directory: ${{ github.workspace }}
        shell: bash
  
      - name: Run GLuaFixer on Lilia - Part 4
        run: |
          echo "Step 7: Running GLuaFixer pretty-print on 'essentials' in 'modules' of 'lilia'..."
          sudo ./glualint_executable pretty-print lilia/modules/essentials/*
        working-directory: ${{ github.workspace }}
        shell: bash
  
      - name: Run GLuaFixer on Lilia - Part 5
        run: |
          echo "Step 7: Running GLuaFixer pretty-print on 'utilities' in 'modularity' of 'lilia'..."
          sudo ./glualint_executable pretty-print lilia/modules/preloaded/*
        working-directory: ${{ github.workspace }}
        shell: bash

      - name: Remove the GLuaFixer folder (Step 8)
        run: |
          echo "Step 8: Removing the GLuaFixer folder..."
          rm -r glualint
        working-directory: '${{ github.workspace }}'
        shell: bash

      - name: Delete the zip file (Step 9)
        run: |
          echo "Step 9: Deleting GLuaFixer.zip..."
          rm glualint.zip
        working-directory: '${{ github.workspace }}'

      - name: Delete the GLuaFixer_executable (Step 10)
        run: |
          echo "Step 10: Deleting GLuaFixer_executable..."
          rm glualint_executable
        working-directory: '${{ github.workspace }}'
        shell: bash

      - name: Commit changes
        run: |
          echo "Committing changes..."
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add -A
            git commit -m "Auto-commit after running GLuaFixer"
            git push
          else
            echo "No changes to commit."
          fi
        working-directory: '${{ github.workspace }}'
